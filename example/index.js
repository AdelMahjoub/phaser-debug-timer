// Generated by CoffeeScript 1.10.0
(function() {
  "use strict";
  var create, debugText, game, gui, preload, removePicture, render, showPicture, timer, update;

  game = null;

  gui = null;

  timer = null;

  preload = function() {
    this.load.baseURL = 'http://examples.phaser.io/assets/';
    this.load.crossOrigin = 'anonymous';
    this.load.image('picture1', 'pics/cougar_sanity_train.png');
    this.load.image('picture2', 'pics/cougar-face_of_nature.png');
    this.load.image('picture3', 'pics/destop-rewarding.png');
    this.load.image('picture4', 'pics/unknown-the_starwars_pic.png');
  };

  create = function() {
    var i, j, k, len, len1, methodName, pic1, pic2, pic3, pic4, pics, propName, ref, ref1;
    pic1 = this.add.sprite(640, 0, 'picture1');
    pic2 = this.add.sprite(640, 128, 'picture2');
    pic3 = this.add.sprite(640, 256, 'picture3');
    pic4 = this.add.sprite(640, 384, 'picture4');
    pics = [pic1, pic2, pic3, pic4];
    timer = game.time.create();
    timer.name = 'myTimer';
    i = 0;
    pics.forEach(function(pic) {
      pic.scale.set(0.5);
      pic.visible = false;
      timer.add(1000 + i * 1000, showPicture, this, pic);
      i++;
    });
    timer.start();
    gui = new dat.GUI;
    ref = ["name", "pause", "removeAll", "resume", "start", "stop"];
    for (j = 0, len = ref.length; j < len; j++) {
      methodName = ref[j];
      gui.add(timer, methodName);
    }
    ref1 = ["autoDestroy"];
    for (k = 0, len1 = ref1.length; k < len1; k++) {
      propName = ref1[k];
      gui.add(timer, propName).listen();
    }
  };

  update = function() {};

  render = function() {
    var debug, x, y;
    debug = game.debug;
    x = 20;
    y = 0;
    debugText('game.debug.timerEvents(timer, x, y)', x, y += 20);
    debug.timerEvents(timer, x, y += 20);
    debugText('game.debug.timerNextEvent(timer, x, y)', x, y += 200);
    debug.timerNextEvent(timer, x, y += 20);
    debugText('game.debug.timerElapsed(timer, x, y)', x, y += 100);
    debug.timerElapsed(timer, x, y += 20);
    debugText('game.debug.timer(timer, x, y) [built-in]', x, y += 100);
    debug.timer(timer, x, y += 20);
  };

  debugText = function(text, x, y, color, font) {
    if (color == null) {
      color = '#999';
    }
    if (font == null) {
      font = game.debug.font;
    }
    game.debug.text(text, x, y, color, font);
  };

  showPicture = function(pic) {
    var event;
    pic.visible = true;
    event = timer.add(4000, removePicture, this, pic);
    event.name = "show " + pic.key;
  };

  removePicture = function(pic) {
    var event;
    pic.visible = false;
    event = timer.add(4000, showPicture, this, pic);
    event.name = "hide " + pic.key;
  };

  game = new Phaser.Game(800, 600, Phaser.CANVAS, 'phaser-example', {
    preload: preload,
    create: create,
    update: update,
    render: render
  });

}).call(this);
